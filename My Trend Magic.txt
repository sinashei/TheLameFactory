//@version=5
indicator("My Trend Magic Indicator",
         shorttitle="My TM Ind",
         overlay=true,
         format=format.price,
         timeframe="",
         timeframe_gaps = true)

//â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘
// >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Universal Definitions <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
//â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘
//Universal Colors
green100    = #008000FF
lime100     = #00FF00FF
red100      = #FF0000FF
blue100     = #0000FFFF
aqua100     = #00FFFFFF
darkred100  = #8B0000FF
gray100     = #808080FF


//â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘
// >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> General Definitions & Setting Management<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
//â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘
//-----------------------------------------------------------------------------}
//                                 Groups
//-----------------------------------------------------------------------------{
UniGp           =   "ðŸŒŽUniversal SettingðŸŒŽ"
TMGp            =   "ðŸª„ Trend Magic Multi timeframe ðŸª„ "
TMCTFcci        =   "Chart timeframe Trend Magic Setting"
TMTF1Gp         =   "Timeframe 1 Trend Magic Setting"
TMTF2Gp         =   "Timeframe 2 Trend Magic Setting"
EMAGp           =   "âœ… EMA Confirmation âœ…"
EMAfltrGp       =   "EMA filter"
EMArisGp        =   "EMA Rising filter"
RsiGp           =   "âœ… RSI Confirmation âœ…"
VwapGp          =   "âœ… VWAP Confirmation âœ…"
AdxGp           =   "âœ… ADX Confirmation âœ…"
DGp             =   "ðŸ“º Display Setting ðŸ“º"
TMPlotGp        =   "Plot Trend Magic"
EMAPlotGp       =   "Plot EMA"
VWAPPlotGp      =   "Plot VWAP"

//-----------------------------------------------------------------------------}
//                                 tooltipips
//-----------------------------------------------------------------------------{
CCIsrcT         =   "Universal CCI source"
upTsrcT         =   "Universal source for CCI's upT"
downTsrcT       =   "Universal source for CCI's downT"
CCIpT           =   "Choose the CCI period\n Used in Calculation of Trend Magic"
CCITT           =   "CCI value above/below which is considered Bullish/Bearish\nEffects the Trend Magic Coloring"
MTATRpmT        =   "ATR period and Multiplierfor calculation of Trend Magic"    
TF12CCIuseT     =   "Enable extra timeframe Trend Magic condition" 
TFT             =   "Choose Timeframe" 
EMAsrcT         =   "EMA universal source"
EMAfltrT        =   "Enable EMA Above/Under Filter"
EMAfiltrlT      =   "EMA filter Length"
EMAriseT        =   "Enable EMA rising condtion"
EMArislT        =   "EMA rising condition length"
RSIT            =   "Enable RSI Confirmation"
RSIspT          =   "RSI source and period"
RSIOsObT        =   "RSI Oversold/Overbought range"
VWAPT           =   "Enable VWAP Confirmation"
VWAPsrcT        =   "VWAP source"
VWAPanchT       =   "VWAP Anchor period"
ADXthrT         =   "Enable ADX Confirmation"
ADXrisT         =   "Enable ADX rising Confirmation"
ADXlsT          =   'ADX length and smoothing'
ADXthrvT        =   "ADX threshold to define strong/week trend"
BuySelT         =   "Show Buy/Sell Signals"
MTpcT           =   "Plot Trend Magic\n\n
                     Color of the Trend Magic can be plotted even with diffrent conditions relating to other TFs:\n\n
                     CTF: Color Base from Timeframe chart\n\nTF1 : Color Base from TF1\n\nTF2 : Color Base from TF2\n\n
                     CTF+TF1 : Color Base considering CTF and TF1\n\nCTF+TF2 : Color Base considering CTF and TF2\n\n
                     TF1+TF2 : Color Base considering TF1 and TF2\n\nCTF+TF1+TF2 : Color base considering all 3 TFs"
EMAPT           =   "Plot filter and trend EMA"
VWAPPT          =   "Plot VWAP"



//â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘
// >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> USER INPUT <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
//â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘
//-----------------------------------------------------------------------------}
//                           Chart Timeframe inputs
//-----------------------------------------------------------------------------{
//CCI universal upT and downT source
ccisrc      = input(close,              "CCI source",           group = TMGp,   tooltip = CCIsrcT)
upTsrc      = input(low,                "UpT source",           group = TMGp,   tooltip = upTsrcT)
downTsrc    = input(high,               "DownT source",         group = TMGp,   tooltip = downTsrcT)
//Chart timeframe CCI inputs
cciperiod   = input(20,                 "CCI period",           group = TMCTFcci,tooltip = CCIpT)                                       ///ðŸ’¡check 10 or 12
ccithrLong  = input(0,                  "Long CCI threshold",   group = TMCTFcci,tooltip = CCITT,       inline="TFCTHR")
ccithrShort = input(0,                  "Short CCI threshold",  group = TMCTFcci,tooltip = CCITT,       inline="TFCTHR")
//Chart timeframe ATR inputs
cTFATRp     = input(5,                  "ATR Period",           group = TMCTFcci,tooltip = MTATRpmT,    inline = "CTFATR")
cTFATRmult  = input(1,                  "ATR Multiplier",       group = TMCTFcci,tooltip = MTATRpmT,    inline = "CTFATR")

//-----------------------------------------------------------------------------}
//                              TF1 inputs
//-----------------------------------------------------------------------------{
TF1cciuse       = input.bool(false,     "Enable TF1",           group = TMTF1Gp, tooltip = TF12CCIuseT)
TF1             = input.timeframe("1",  "TF1",                  group = TMTF1Gp, tooltip = TFT)
TF1cciperiod    = input(20,             "TF1 CCI period",       group = TMTF1Gp, tooltip = CCIpT) 
TF1ccithrLong   = input(0,              "Long CCI threshold",   group = TMTF1Gp, tooltip = CCITT,       inline="TF1THR")
TF1ccithrShort  = input(0,              "Short CCI threshold",  group = TMTF1Gp, tooltip = CCITT,       inline="TF1THR")
//TF1 timeframe ATR inputs
TF1_ATRp        = input(5,              "TF1 ATR Period",       group = TMTF1Gp, tooltip = MTATRpmT,    inline = "TF1ATR")
TF1_ATRmult     = input(1,              "TF1 ATR Multiplier",   group = TMTF1Gp, tooltip = MTATRpmT,    inline = "TF1ATR")

//-----------------------------------------------------------------------------}
//                              TF2 inputs
//-----------------------------------------------------------------------------{
TF2cciuse       = input.bool(false,     "Enable TF2",           group = TMTF2Gp, tooltip = TF12CCIuseT)
TF2             = input.timeframe("1",  "TF2",                  group = TMTF2Gp, tooltip = TFT)
TF2cciperiod    = input(20,             "TF2 CCI period",       group = TMTF2Gp, tooltip = CCIpT) 
TF2ccithrLong   = input(0,              "Long CCI threshold",   group = TMTF2Gp, tooltip = CCITT,       inline="TF2THR")
TF2ccithrShort  = input(0,              "Short CCI threshold",  group = TMTF2Gp, tooltip = CCITT,       inline="TF2THR")
//TF2 timeframe ATR inputs
TF2_ATRp        = input(5,              "TF2 ATR Period",       group = TMTF2Gp, tooltip = MTATRpmT,    inline = "TF2ATR")
TF2_ATRmult     = input(1,              "TF2 ATR Multiplier",   group = TMTF2Gp, tooltip = MTATRpmT,    inline = "TF2ATR")

//-----------------------------------------------------------------------------}
//                              EMA inputs
//-----------------------------------------------------------------------------{
//EMA universal source
emasrc          = input(close,          "EMA source",           group = EMAGp,      tooltip = EMAsrcT)
//EMA Filter
emafltruse      = input.bool(false,     "Enable EMA filter",    group = EMAfltrGp,  tooltip = EMAfltrT)
emafltrlen      = input.int(50,         "EMA filter length",    group = EMAfltrGp,  tooltip = EMAfiltrlT, minval = 1)
//EMA Rising
emarisuse       = input.bool(false,     "Enable EMA rising",    group = EMArisGp,   tooltip = EMAriseT)
emarislen       = input.int(20,         "EMA rising length",    group = EMArisGp,   tooltip = EMArislT,   minval = 1)

//-----------------------------------------------------------------------------}
//                              RSI inputs
//-----------------------------------------------------------------------------{
rsiuse      = input.bool(false,         "Enable RSI",           group=RsiGp, tooltip = RSIT)
rsisrc      = input(close,              "RSI source",           group=RsiGp, tooltip = RSIspT,      inline="rsi1")                                  //ðŸ’¡typical price (TP) or the median price (MP)
rsipr       = input(14,                 "RSI period",           group=RsiGp, tooltip = RSIspT,      inline="rsi1")                                  //ðŸ’¡test periods 7 and 9
rsibuycond  = input(30,                 "RSI Oversold",         group=RsiGp, tooltip = RSIOsObT,    inline="rsi2")
rsisellcond = input(70,                 "RSI Overbought",       group=RsiGp, tooltip = RSIOsObT,    inline="rsi2")

//-----------------------------------------------------------------------------}
//                              VWAP inputs
//-----------------------------------------------------------------------------{
vwapuse     = input.bool(false,     "Enable VWAP",                      group=VwapGp, tooltip = VWAPT)
vwapsrc     = input(hlc3,           "VWAP source",                      group=VwapGp, tooltip = VWAPsrcT)                          //ðŸ’¡median price (MP) or the typical price (TP) 
vwapAnch    = input.string("1h",    "Anchor",                           group=VwapGp, tooltip = VWAPanchT,
             options = ["1m", "3m", "5m", "15m", "30m", "1h", "2h","4h", "D"]) // 15m or 30m
stdevMulti  = input.float(1.0,      "Standard Deviation Multiplier",    group=VwapGp,   inline="vwap")
ancTF1 = switch vwapAnch
    "1m"   => "1"
    "3m"  => "3"
    "5m" => "5"
    "15m" => "15"
    "30m" => "30"
    "1h" => "60"
    "2h" => "120"
    "4h" => "240"
    "D" => "1440"

//-----------------------------------------------------------------------------}
//                              ADX inputs
//-----------------------------------------------------------------------------{
adxthruse   = input.bool(false, "Enable ADX Threshold",         group = AdxGp, tooltip = ADXthrT)
adxthr      = input.int(20,     "ADX Strong Trend Threshold",   group = AdxGp, tooltip = ADXthrvT)                        //ðŸ’¡ 30 or 35
adxriseuse  = input.bool(false, "Enable ADX Rising",            group = AdxGp, tooltip = ADXrisT)
len         = input.int(17,     "DI Length",                    group = AdxGp, tooltip = ADXlsT,    inline="adx")         //ðŸ’¡ 9 or 11
lensig      = input.int(14,     "ADX Smoothing",                group = AdxGp, tooltip = ADXlsT,    inline="adx")         //ðŸ’¡ try 6


//â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘
// >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Trend Magic Multi timeframe  Calculations<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
//â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘
//-----------------------------------------------------------------------------}
//                      Trend Magic Time Frame Chart
//-----------------------------------------------------------------------------{
// Calculate ATR & CCI Timefram Chart
float ATR               = ta.sma(ta.tr, cTFATRp)
upT                     = upTsrc - ATR * cTFATRmult
downT                   = downTsrc + ATR * cTFATRmult
float cci               = ta.cci(ccisrc, cciperiod)

// Calculate Trend Magic for Timeframe Chart
float MagicTrend        = 0.0
MagicTrend              := cci > 0 ? (upT < nz(MagicTrend[1]) ? nz(MagicTrend[1]) : upT) :
                         (downT > nz(MagicTrend[1]) ? nz(MagicTrend[1]) : downT)

//-----------------------------------------------------------------------------}
//                           Trend Magic TF1
//-----------------------------------------------------------------------------{
// Calculate ATR & CCI TF1
float TF1_ATR           = request.security(syminfo.tickerid, TF1, ta.sma(ta.tr, TF1_ATRp))
float TF1_upT           = request.security(syminfo.tickerid, TF1, upTsrc    - TF1_ATR * TF1_ATRmult)
float TF1_downT         = request.security(syminfo.tickerid, TF1, downTsrc  + TF1_ATR * TF1_ATRmult)
float TF1_cci           = request.security(syminfo.tickerid, TF1, ta.cci(ccisrc, TF1cciperiod))
// Calculate Trend Magic TF1
float TF1_MagicTrend    = 0.0
TF1_MagicTrend          := TF1_cci > 0  ?  (TF1_upT < nz(TF1_MagicTrend[1]) ? nz(TF1_MagicTrend[1]) : TF1_upT) :
                          (TF1_downT > nz(TF1_MagicTrend[1]) ? nz(TF1_MagicTrend[1]) : TF1_downT)

//                    
//-----------------------------------------------------------------------------}
//                           Trend Magic TF2
//-----------------------------------------------------------------------------{
// Calculate ATR & CCI TF2
float TF2_ATR           = request.security(syminfo.tickerid, TF2, ta.sma(ta.tr, TF2_ATRp))
float TF2_upT           = request.security(syminfo.tickerid, TF2, upTsrc    - TF2_ATR * TF2_ATRmult)
float TF2_downT         = request.security(syminfo.tickerid, TF2, downTsrc  + TF2_ATR * TF2_ATRmult)
float TF2_cci           = request.security(syminfo.tickerid, TF2, ta.cci(ccisrc, TF2cciperiod))
// Calculate Trend Magic TF2
float TF2_MagicTrend    = 0.0
TF2_MagicTrend          := TF2_cci > 0  ?  (TF2_upT < nz(TF2_MagicTrend[1]) ? nz(TF2_MagicTrend[1]) : TF2_upT) :
                          (TF2_downT > nz(TF2_MagicTrend[1]) ? nz(TF2_MagicTrend[1]) : TF2_downT)

//â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘
// >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Condition / Confirmation Calculation<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
//â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘
//-----------------------------------------------------------------------------}
//                      Time Frame Chart CCI Condition
//-----------------------------------------------------------------------------{
bool MTLong     = ccithrLong == ccithrShort ? (cci > ccithrLong  ? true : false)   : (cci >= ccithrLong ? true : false)
bool MTShort    = ccithrLong == ccithrShort ? (cci < ccithrShort ? true : false)   : (cci <= ccithrShort ? true : false)              

//-----------------------------------------------------------------------------}
//                        TF1 -- CCI confirmation --
//-----------------------------------------------------------------------------{
bool MTTF1LongInd   = TF1ccithrLong == TF1ccithrShort ? (TF1_cci > TF1ccithrLong ? true : false) : (TF1_cci >= TF1ccithrLong ? true : false)
bool MTTF1ShortInd  = TF1ccithrLong == TF1ccithrShort ? (TF1_cci < TF1ccithrShort? true : false) : (TF1_cci <= TF1ccithrShort ? true : false)

bool MTTF1Long      = TF1cciuse == false ? true : MTTF1LongInd
bool MTTF1Short     = TF1cciuse == false ? true : MTTF1ShortInd

//-----------------------------------------------------------------------------}
//                        TF2 -- CCI confirmation --
//-----------------------------------------------------------------------------{
bool MTTF2LongInd   = TF2ccithrLong == TF2ccithrShort ? (TF2_cci > TF2ccithrLong ? true : false) : (TF2_cci >= TF2ccithrLong ? true : false)
bool MTTF2ShortInd  = TF2ccithrLong == TF2ccithrShort ? (TF2_cci < TF2ccithrShort? true : false) : (TF2_cci <= TF2ccithrShort ? true : false)

bool MTTF2Long      = TF2cciuse == false ? true : MTTF2LongInd
bool MTTF2Short     = TF2cciuse == false ? true : MTTF2ShortInd

//-----------------------------------------------------------------------------}
//                       EMA -- Trend Confirmation -- 
//-----------------------------------------------------------------------------{
//EMA filter Calculation
float emafltr       = ta.ema(emasrc, emafltrlen)

bool  emafltrLong   = emafltruse == false ? true : emafltr <= close     ? true : false
bool  emafltrShort  = emafltruse == false ? true : emafltr >= close     ? true : false

//EMA rising Calculation
float emaris        = ta.ema(emasrc, emarislen)

bool  emarisLong   = emarisuse == false ? true : emaris > emaris[1]     ? true : false
bool  emarisShort  = emarisuse == false ? true : emaris < emaris[1]     ? true : false
//-----------------------------------------------------------------------------}
//                       RSI -- Momentum Confirmation -- 
//-----------------------------------------------------------------------------{
float rsi               = ta.rsi(rsisrc, rsipr)

bool rsiLong            = rsiuse == false ? true : rsi <= rsibuycond    ? true : false
bool rsiShort           = rsiuse == false ? true : rsi >= rsisellcond   ? true : false

//-----------------------------------------------------------------------------}
//                       VWAP -- Volume Confirmation -- 
//-----------------------------------------------------------------------------{
anchor                  = timeframe.change(ancTF1)
[vwap, upper, lower]    = ta.vwap(vwapsrc, anchor, stdevMulti)

bool vwapLong           = vwapuse==false ? true : vwap < close ? true : false
bool vwapShort          = vwapuse==false ? true : vwap > close ? true : false

//-----------------------------------------------------------------------------}
//                       ADX -- Trend Strength Confirmation -- 
//-----------------------------------------------------------------------------{
[diplus, diminus, adx]  = ta.dmi(len, lensig)

bool adxStrong          = adxthruse     == false ? true : (adx > adxthr ? true : false)
bool adxRising          = adxriseuse    == false ? true : (adx > adx[1] ? true : false)

//â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘
// >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Buy/Sell Condition<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
//â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘
// Calculate buy and sell signals
var bool buySignal      = false
var bool sellSignal     = false
var bool prevBuySignal  = false
var bool prevSellSignal = false
var bool inLong         = false
var bool inShort        = false

//-----------------------------------------------------------------------------}
//                         Buy/Sell Conditions
//-----------------------------------------------------------------------------{
shBS        =input.bool(true,     "Show Buy/Sell Signals",    group = DGp,  tooltip = BuySelT)


buySignal  := MTLong and MTTF1Long and MTTF2Long and emafltrLong and emarisLong and rsiLong and vwapLong  and
              adxStrong and adxRising and close-open>0 ? true : false
sellSignal := MTShort and MTTF1Short and MTTF2Short and emafltrShort and emarisShort and rsiShort and vwapShort and
              adxStrong and adxRising and close-open<0 ? true : false

long        = buySignal     and not prevBuySignal   and not inLong  ? true : false
short       = sellSignal    and not prevSellSignal  and not inShort ? true : false

if long
    inLong  := true
    inShort := false
if short
    inLong  := false
    inShort := true

prevBuySignal   := buySignal
prevSellSignal  := sellSignal

//â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘
// >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> Display<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
//â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘â–‘
// Calculate color
color1  = color.gray
color2  = color.gray
color3  = color.gray
color4  = color.gray
color5  = color.gray
color6  = color.gray
color7  = color.gray

color1 := MTLong                                    ? color.blue : (MTShort                                     ? color.red : color.gray)
color2 := MTTF1LongInd                              ? color.blue : (MTTF1ShortInd                               ? color.red : color.gray)
color3 := MTTF2LongInd                              ? color.blue : (MTTF2ShortInd                               ? color.red : color.gray)
color4 := MTLong and MTTF1LongInd                   ? color.blue : (MTShort and MTTF1ShortInd                   ? color.red : color.gray)
color5 := MTLong and MTTF2LongInd                   ? color.blue : (MTShort and MTTF2ShortInd                   ? color.red : color.gray)
color6 := MTTF1LongInd and MTTF2LongInd             ? color.blue : (MTTF1ShortInd and MTTF2ShortInd             ? color.red : color.gray)
color7 := MTLong and MTTF1LongInd and MTTF2LongInd  ? color.blue : (MTShort and MTTF1ShortInd and MTTF2ShortInd ? color.red : color.gray)

//-----------------------------------------------------------------------------}
//                             Plot inputs
//-----------------------------------------------------------------------------{
//Trend Magic
MtPlot          = input.bool(true,       "Trend Magic - TFC",   group = TMPlotGp, tooltip = MTpcT,  inline="CTFTMP")
MTcolor         = input.string("CTF",    "Color Base?",         group = TMPlotGp, tooltip = MTpcT,
                  options = ["CTF", "TF1", "TF2", "CTF+TF1", "CTF+TF2", "TF1+TF2", "CTF+TF1+TF2"],  inline="CTFTMP")
MTcolorValue    = MTcolor == "CTF"          ? color1 : 
                  MTcolor == "TF1"          ? color2 :
                  MTcolor == "TF2"          ? color3 : 
                  MTcolor == "CTF+TF1"      ? color4 :
                  MTcolor == "CTF+TF2"      ? color5 :
                  MTcolor == "TF1+TF2"      ? color6 : 
                  MTcolor == "CTF+TF1+TF2"  ? color7 : na

//TF1 Trend Magic
TF1plot         = input.bool(false,     "Trend Magic - TF1",    group = TMPlotGp, tooltip = MTpcT,  inline="TF1TMP")
TF1MTcolor      = input.string("TF1",   "Color Base?",          group = TMPlotGp, tooltip = MTpcT,
                  options = ["CTF", "TF1", "TF2", "CTF+TF1", "CTF+TF2", "TF1+TF2", "CTF+TF1+TF2"],  inline="TF1TMP")
TF1MTcolorValue = TF1MTcolor == "CTF"          ? color1 : 
                  TF1MTcolor == "TF1"          ? color2 :
                  TF1MTcolor == "TF2"          ? color3 : 
                  TF1MTcolor == "CTF+TF1"      ? color4 :
                  TF1MTcolor == "CTF+TF2"      ? color5 :
                  TF1MTcolor == "TF1+TF2"      ? color6 : 
                  TF1MTcolor == "CTF+TF1+TF2"  ? color7 : na


//TF2 Trend Magic
TF2plot         = input.bool(false,     "Trend Magic - TF2",    group = TMPlotGp, tooltip = MTpcT,  inline="TF2TMP")
TF2MTcolor      = input.string("TF2",   "Color Base?",          group = TMPlotGp, tooltip = MTpcT, 
                  options = ["CTF", "TF1", "TF2", "CTF+TF1", "CTF+TF2", "TF1+TF2", "CTF+TF1+TF2"],  inline="TF2TMP")
TF2MTcolorValue = TF2MTcolor == "CTF"          ? color1 : 
                  TF2MTcolor == "TF1"          ? color2 :
                  TF2MTcolor == "TF2"          ? color3 : 
                  TF2MTcolor == "CTF+TF1"      ? color4 :
                  TF2MTcolor == "CTF+TF2"      ? color5 :
                  TF2MTcolor == "TF1+TF2"      ? color6 : 
                  TF2MTcolor == "CTF+TF1+TF2"  ? color7 : na
//EMA
emafltrplot     = input.bool(false,          "Filter EMA",      group = EMAPlotGp, tooltip = EMAPT, inline = "EMA plot")
emarisplot      = input.bool(false,          "Trend EMA",       group = EMAPlotGp, tooltip = EMAPT, inline = "EMA plot")

//VWAP
vwapplot        = input.bool(false,          "VWAP",            group = VWAPPlotGp, tooltip = VWAPPT, inline = "VWAP plot")
vwapuperplot    = input.bool(false,          "VWAP Upper",      group = VWAPPlotGp, tooltip = VWAPPT, inline = "VWAP plot")
vwaplowerplot   = input.bool(false,          "VWAP Lower",      group = VWAPPlotGp, tooltip = VWAPPT, inline = "VWAP plot")
//-----------------------------------------------------------------------------}
//                        Plot Trend Magic and CCI
//-----------------------------------------------------------------------------{
// Plot Trend Magic
plot(MtPlot     == true ? MagicTrend       : na,   title="Trend Magic",         color = MTcolorValue,       linewidth=3)
plot(TF1plot    == true ? TF1_MagicTrend   : na,   title="TF1 Trend Magic",     color = TF1MTcolorValue,    linewidth=3)
plot(TF2plot    == true ? TF2_MagicTrend   : na,   title="TF2 Trend Magic",     color = TF2MTcolorValue,    linewidth=3)

// Plot CCI
plot(cci,           title="CCI",                color=color.orange,         display= display.data_window)
plot(TF1_cci,       title="TF1_CCI",            color=color.orange,         display= display.data_window)
plot(TF2_cci,       title="TF2_CCI",            color=color.orange,         display= display.data_window)

//-----------------------------------------------------------------------------}
//                        Plot Confirmations and CTRLs
//-----------------------------------------------------------------------------{
////////////////////////// Colors CTRL//////////////////////////////
//Color 1 CTRL
var int Color1_CTRL = 0

if color1       == color.blue
    Color1_CTRL := 1
else if color1  == color.red
    Color1_CTRL := -1
else
    Color1_CTRL := 0

plot(Color1_CTRL,    title = "TFC_CTRL",                                    display= display.data_window,
     color= Color1_CTRL ==1 ? color.green : Color1_CTRL == -1 ? color.red : color.gray)      
//Color 4 CTRL
var int Color4_CTRL = 0

if color4       == color.blue
    Color4_CTRL := 1
else if color4  == color.red
    Color4_CTRL := -1
else
    Color4_CTRL := 0

plot(Color4_CTRL,    title = "TF1_cond_CTRL",                                    display= display.data_window,
     color= Color4_CTRL ==1 ? color.green : Color4_CTRL == -1 ? color.red : color.gray)  

//Color 5 CTRL
var int Color5_CTRL = 0

if color5       == color.blue
    Color5_CTRL := 1
else if color5  == color.red
    Color5_CTRL := -1
else
    Color5_CTRL := 0

plot(Color5_CTRL,    title = "TF2_cond_CTRL",                                    display= display.data_window,
     color= Color5_CTRL ==1 ? color.green : Color5_CTRL == -1 ? color.red : color.gray)  

//Color 7 CTRL
var int Color7_CTRL = 0

if color7       == color.blue
    Color7_CTRL := 1
else if color7  == color.red
    Color7_CTRL := -1
else
    Color7_CTRL := 0

plot(Color7_CTRL,    title = "3TF_CTRL",                                    display= display.data_window,
     color= Color7_CTRL ==1 ? color.green : Color7_CTRL == -1 ? color.red : color.gray)  

//Color 2 CTRL
var int Color2_CTRL = 0

if color2       == color.blue
    Color2_CTRL := 1
else if color2  == color.red
    Color2_CTRL := -1
else
    Color2_CTRL := 0

plot(Color2_CTRL,    title = "TF1_CTRL",                                    display= display.data_window,
     color= Color2_CTRL ==1 ? color.green : Color2_CTRL == -1 ? color.red : color.gray)     

//Color 3 CTRL
var int Color3_CTRL = 0

if color3       == color.blue
    Color3_CTRL := 1
else if color3  == color.red
    Color3_CTRL := -1
else
    Color3_CTRL := 0

plot(Color3_CTRL,    title = "TF2_CTRL",                                    display= display.data_window,
     color= Color3_CTRL ==1 ? color.green : Color3_CTRL == -1 ? color.red : color.gray)   

//Color 6 CTRL
var int Color6_CTRL = 0

if color6       == color.blue
    Color6_CTRL := 1
else if color6  == color.red
    Color6_CTRL := -1
else
    Color6_CTRL := 0

plot(Color6_CTRL,    title = "TF1+TF2_CTRL",                                    display= display.data_window,
     color= Color6_CTRL ==1 ? color.green : Color6_CTRL == -1 ? color.red : color.gray)  

/////////////////////////////////// EMA ///////////////////////////////////////
//EMA Plot
plot(emafltrplot    == true ? emafltr   : na, title="EMA Filter",   color=color.blue, linewidth = 3)
plot(emarisplot     == true ? emaris    : na, title="EMA Trend",    color=color.blue, linewidth = 2)

//EMA Filter CTRL Plot
var int emafltrCtrl = 0

if emafltrLong          == true
    emafltrCtrl := 1
else if emafltrShort    == true
    emafltrCtrl := -1
else
    emafltrCtrl := 0

plot(emafltrCtrl,       title = "EMA filter CTRL",                              display= display.data_window,
     color= emafltrCtrl ==1 ? color.green : emafltrCtrl == -1 ? color.red : color.gray)

//EMA Rising CTRL Plot
var int emarisCtrl = 0

if emarisLong          == true
    emarisCtrl := 1
else if emarisShort    == true
    emarisCtrl := -1
else
    emarisCtrl := 0

plot(emarisCtrl,       title = "EMA rising CTRL",                               display= display.data_window,
     color= emarisCtrl ==1 ? color.green : emarisCtrl == -1 ? color.red : color.gray)

/////////////////////////////////// RSI ///////////////////////////////////////
plot(rsi,            title="RSI",                                               display= display.data_window,
     color= rsi < rsibuycond ?  color.green : rsi > rsisellcond ? color.red : color.gray)

//RSI CTRL
var int rsiCTRL = 0

if rsiLong          == true
    rsiCTRL := 1
else if rsiShort    == true
    rsiCTRL := -1
else
    rsiCTRL := 0

plot(rsiCTRL,       title = "RSI CTRL",                                         display= display.data_window,
     color= rsiCTRL ==1 ? color.green : rsiCTRL == -1 ? color.red : color.gray)

/////////////////////////////////// VWAP ///////////////////////////////////////
//VWAP plot
plot(vwapplot       == true ? vwap  : na,  title="vwap",               color = color.white,    linewidth = 4)
plot(vwapuperplot   == true ? upper : na,  title="vwap upper",         color = color.white,    linewidth = 1)
plot(vwaplowerplot  == true ? lower : na,  title="wvap lower",         color = color.white,    linewidth = 1)

//Vwap CTRL
var int vwapCTRL = 0

if vwapLong         ==true
    vwapCTRL :=1
else if vwapShort   == true
    vwapCTRL := -1
else
    vwapCTRL:=0

plot(vwapCTRL,      title = "VWAP CTRL",                                        display= display.data_window,
     color= vwapCTRL ==1 ? color.green : vwapCTRL == -1 ? color.red : color.gray)

/////////////////////////////////// ADX ///////////////////////////////////////
//ADX Plot
plot(adx,           title="ADX",                color=color.purple,           display= display.data_window)
plot(diplus,        title="+DI",                color=color.purple,           display= display.data_window)
plot(diminus,       title="-DI",                color=color.purple,           display= display.data_window)

//ADX Threshold CTRL
var int adxthrCTRL  = 0
adxthrCTRL          := adxStrong == true ? 1 : 0

plot(adxthrCTRL,    title = "ADX Threshold CTRL",                               display= display.data_window,
     color= adxthrCTRL == 0  ? color.gray : (adxthrCTRL == 1 and close - open > 0  ? color.green : color.red))

//ADX Rising CTRL
var int adxriseCTRL = 0
adxriseCTRL         := adxRising == true ? 1 : 0

plot(adxriseCTRL,    title = "ADX Rising CTRL",                                 display= display.data_window,
     color= adxriseCTRL == 0  ? color.gray : (adxriseCTRL == 1 and close - open > 0  ? color.green : color.red))

//-----------------------------------------------------------------------------}
//                        Plot Buy/Sell Signals
//-----------------------------------------------------------------------------{
plotshape(shBS == true ? long : na, "Buy",  style=shape.triangleup,   location=location.belowbar, color=color.green, size=size.small)
plotshape(shBS == true ? short: na, "Sell", style=shape.triangledown, location=location.abovebar, color=color.red,   size=size.small)


